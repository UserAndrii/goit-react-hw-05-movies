{"version":3,"file":"static/js/241.9f9e1674.chunk.js","mappings":"kTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,uFACVF,EAAAA,EAAAA,IAAA,oCACQD,EADR,iBACwBG,IAFd,cAC3BC,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,sDAOnBC,EAAiB,mCAAG,WAAOC,EAAOL,GAAd,gFACzBM,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,SAAU,QACVT,KAAMA,EACNU,eAAe,EACfC,MAAON,IANsB,SASRP,EAAAA,EAAAA,IAAA,wBAA2BQ,IATnB,cASzBL,EATyB,yBAUxBA,EAASC,MAVe,2CAAH,wDAajBU,EAAc,mCAAG,WAAMC,GAAN,uFACLf,EAAAA,EAAAA,IAAA,iBACXe,EADW,oBACGhB,EADH,qBADK,cACtBI,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdY,EAAgB,mCAAG,WAAMD,GAAN,uFACPf,EAAAA,EAAAA,IAAA,iBACXe,EADW,4BACWhB,EADX,oBADO,cACxBI,EADwB,yBAIvBA,EAASC,KAAKa,MAJS,2CAAH,sDAOhBC,EAAiB,mCAAG,WAAMH,GAAN,gFACzBP,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,SAAU,QACVT,KAAM,IAJuB,SAORF,EAAAA,EAAAA,IAAA,iBAAoBe,EAApB,oBAAkCP,IAP1B,cAOzBL,EAPyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,qD,uKCrCjBc,EAAOC,EAAAA,GAAAA,GAAH,6RAaJC,EAAQD,EAAAA,GAAAA,IAAH,gFAMLE,EAAOF,EAAAA,GAAAA,GAAH,sCAIJG,EAAYH,EAAAA,GAAAA,EAAH,+C,2EC8BtB,EA7Ca,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,GAET,IAAME,EAAW,mCAAG,8GAEOhB,EAAAA,EAAAA,IAAiBQ,GAFxB,OAGQ,KADlBrB,EAFU,QAGH8B,QAAcH,GAAS,GACpCF,EAAUzB,GAJM,gDAMhB2B,GAAS,GACTI,QAAQL,MAAM,KAAMM,SAPJ,yDAAH,qDAWjBH,GACD,GAAE,CAACR,KAGF,2BACGG,EAAOM,OAAS,IACf,SAACd,EAAD,UACGQ,EAAOS,KAAI,YAA4C,IAAzCrB,EAAwC,EAAxCA,GAAIsB,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,2BACE,SAAClB,EAAD,CACEmB,IAAKH,EAhCN,mCAgCmCA,EAAeI,EACjDC,IAAKJ,KAEP,SAAChB,EAAD,UAAOgB,KACP,SAACf,EAAD,UAAYgB,MANLxB,EASZ,MAGJc,IAAS,SAACc,EAAA,EAAD,MAGf,C,oFCnDYC,EAAOxB,EAAAA,GAAAA,IAAH,yHAaJC,GANOD,EAAAA,GAAAA,EAAH,oFAMIA,EAAAA,GAAAA,IAAH,mE,kECKlB,EAfoB,SAAC,GAEd,IAAD,IADJyB,MAAAA,OACI,MADI,8CACJ,EACJ,OACE,UAACD,EAAD,YACE,uBAAIC,KACJ,SAACxB,EAAD,CAAOmB,IAAKM,EAAYJ,IAAI,2BAGjC,C","sources":["API/index.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '58645e23389326a2e8ed75695b9e1b79';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async page => {\n  const response = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async (value, page) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\nexport const fetchMovieData = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US'`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 170px;\n  object-fit: cover;\n`;\n\nexport const Name = styled.h4`\n  margin: 0;\n`;\n\nexport const Character = styled.p`\n  margin: 20px 0 0 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieActors } from '../../API';\nimport { List, Image, Name, Character } from './Cast.styled';\nimport placeholder from '../../images/no-actors.png';\nimport HandleError from '../HandleError';\n\nconst API_URL_IMG = `https://image.tmdb.org/t/p/w300/`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMovieActors(movieId);\n        if (response.length === 0) setError(true);\n        setActors(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      {actors.length > 0 && (\n        <List>\n          {actors.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <Image\n                  src={profile_path ? API_URL_IMG + profile_path : placeholder}\n                  alt={name}\n                />\n                <Name>{name}</Name>\n                <Character>{character}</Character>\n              </li>\n            );\n          })}\n        </List>\n      )}\n      {error && <HandleError />}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, Image } from './HandleError.styled';\n\nimport errorImage from '../../images/oops-error.jpg';\n\nconst HandleError = ({\n  title = 'Sorry, there are no results for this query.',\n}) => {\n  return (\n    <Wrap>\n      <p>{title}</p>\n      <Image src={errorImage} alt=\"Something went wrong\" />\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n"],"names":["API_KEY","axios","fetchTrendingMovies","page","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","id","fetchMovieActors","cast","fetchMovieReviews","List","styled","Image","Name","Character","movieId","useParams","useState","actors","setActors","error","setError","useEffect","fetchMovies","length","console","message","map","profile_path","name","character","src","placeholder","alt","HandleError","Wrap","title","errorImage"],"sourceRoot":""}