{"version":3,"file":"static/js/286.930962fa.chunk.js","mappings":"kTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,oCAAuCD,IAD7B,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,gFACzBC,EAAe,IAAIC,gBAAgB,CACvCC,QAASV,EACTW,SAAU,QACVC,KAAM,EACNC,eAAe,EACfC,MAAOP,IANsB,SASRN,EAAAA,EAAAA,IAAA,wBAA2BO,IATnB,cASzBL,EATyB,yBAUxBA,EAASC,KAAKC,SAVU,2CAAH,sDAajBU,EAAc,mCAAG,WAAMC,GAAN,uFACLf,EAAAA,EAAAA,IAAA,iBACXe,EADW,oBACGhB,EADH,qBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOda,EAAgB,mCAAG,WAAMD,GAAN,uFACPf,EAAAA,EAAAA,IAAA,iBACXe,EADW,4BACWhB,EADX,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,KAAKc,MAJS,2CAAH,sDAOhBC,EAAiB,mCAAG,WAAMH,GAAN,gFACzBR,EAAe,IAAIC,gBAAgB,CACvCC,QAASV,EACTW,SAAU,QACVC,KAAM,IAJuB,SAORX,EAAAA,EAAAA,IAAA,iBAAoBe,EAApB,oBAAkCR,IAP1B,cAOzBL,EAPyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,qD,oFCnCjBe,EAAOC,EAAAA,GAAAA,IAAH,yHAaJC,GANOD,EAAAA,GAAAA,EAAH,oFAMIA,EAAAA,GAAAA,IAAH,mE,kECKlB,EAfoB,SAAC,GAEd,IAAD,IADJE,MAAAA,OACI,MADI,8CACJ,EACJ,OACE,UAACH,EAAD,YACE,uBAAIG,KACJ,SAACD,EAAD,CAAOE,IAAKC,EAAYC,IAAI,2BAGjC,C,+OCZYC,EAAUN,EAAAA,GAAAA,IAAH,+CAIPO,EAAOP,EAAAA,GAAAA,GAAH,wIASJQ,EAAOR,EAAAA,GAAAA,GAAH,oFAKJS,EAAST,EAAAA,GAAAA,GAAH,sCAINU,EAAOV,EAAAA,GAAAA,EAAH,+C,mBC0BjB,EA3CgB,WACd,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,GAET,IAAME,EAAW,mCAAG,8GAEOrB,EAAAA,EAAAA,IAAkBa,GAFzB,OAGQ,KADlB7B,EAFU,QAGHsC,QAAcH,GAAS,GACpCF,EAAWjC,GAJK,gDAMhBmC,GAAS,GACTI,QAAQL,MAAM,KAAMM,SAPJ,yDAAH,qDAWjBH,GACD,GAAE,CAACR,KAGF,UAACL,EAAD,WACGQ,EAAQM,OAAS,IAChB,SAACb,EAAD,UACGO,EAAQS,KAAI,YAA8B,IAA3B5B,EAA0B,EAA1BA,GAAI6B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,WAAQ,WAASe,MACjB,SAACd,EAAD,UAAOe,MAFE9B,EAKd,MAGJqB,IACC,SAACU,EAAA,EAAD,CAAaxB,MAAM,sDAI1B,C","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '58645e23389326a2e8ed75695b9e1b79';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async value => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n    query: value,\n  });\n\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieData = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US'`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, Image } from './HandleError.styled';\n\nimport errorImage from '../../images/oops-error.jpg';\n\nconst HandleError = ({\n  title = 'Sorry, there are no results for this query.',\n}) => {\n  return (\n    <Wrap>\n      <p>{title}</p>\n      <Image src={errorImage} alt=\"Something went wrong\" />\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px 20px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid coral;\n`;\n\nexport const Author = styled.h4`\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  margin: 10px 0 0 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from '../../API';\nimport { List, Item, Wrapper, Author, Text } from './Reviews.styled';\nimport HandleError from '../HandleError';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        if (response.length === 0) setError(true);\n        setReviews(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {reviews.length > 0 && (\n        <List>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <Item key={id}>\n                <Author>Author: {author}</Author>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n      {error && (\n        <HandleError title=\"Sorry, we don't have any reviews for this movie\" />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchTrendingMovies","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","page","include_adult","query","fetchMovieData","id","fetchMovieActors","cast","fetchMovieReviews","Wrap","styled","Image","title","src","errorImage","alt","Wrapper","List","Item","Author","Text","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchMovies","length","console","message","map","author","content","HandleError"],"sourceRoot":""}