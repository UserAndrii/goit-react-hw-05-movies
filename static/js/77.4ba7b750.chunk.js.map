{"version":3,"file":"static/js/77.4ba7b750.chunk.js","mappings":"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","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieData/MovieData.styled.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '58645e23389326a2e8ed75695b9e1b79';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async value => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n    query: value,\n  });\n\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieData = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US'`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, Image } from './HandleError.styled';\n\nimport errorImage from '../../images/oops-error.jpg';\n\nconst HandleError = ({\n  title = 'Sorry, there are no results for this query.',\n}) => {\n  return (\n    <Wrap>\n      <p>{title}</p>\n      <Image src={errorImage} alt=\"Something went wrong\" />\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BtnLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  gap: 8px;\n  padding: 8px 16px;\n  margin: 10px 0 0 20px;\n\n  color: black;\n  font-weight: 500;\n  text-decoration: none;\n\n  border: 1px solid coral;\n  border-radius: 4px;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #ff7f50;\n  }\n`;\n","import { BiArrowBack } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { BtnLink } from './BackLink.styled';\n\nconst BackLink = ({ patch }) => {\n  return (\n    <BtnLink to={patch}>\n      <BiArrowBack />\n      Go back\n    </BtnLink>\n  );\n};\n\nBackLink.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  max-width: 300px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 15px 20px;\n  gap: 40px;\n  border-bottom: 2px solid coral;\n`;\n\nexport const InfoBlock = styled.div`\n  border-bottom: 2px solid coral;\n`;\n\nexport const Text = styled.h4`\n  text-align: center;\n  margin: 20px 0;\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n  margin: 0 0 20px 0;\n  padding: 0;\n`;\n\nexport const BtnLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid coral;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: white;\n    background-color: coral;\n  }\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: coral;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Loader from '../Loader';\nimport placeholder from '../../images/no-image.png';\nimport {\n  Image,\n  Wrapper,\n  BtnLink,\n  BtnList,\n  Text,\n  InfoBlock,\n} from './MovieData.styled';\n\nconst API_URL_IMG = `https://image.tmdb.org/t/p/original`;\n\nconst MovieData = ({ data }) => {\n  const { poster_path, title, name, vote_average, overview, genres } = data;\n\n  const getNamesFromGenres = genres => {\n    if (genres) {\n      const genresName = genres.map(genre => genre.name);\n      return genresName.join(', ');\n    }\n    return;\n  };\n\n  return (\n    <div>\n      <Wrapper>\n        <Image\n          src={poster_path ? API_URL_IMG + poster_path : placeholder}\n          alt={title ?? name}\n        />\n        <div>\n          <h1>{title ?? name}</h1>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{getNamesFromGenres(genres)}</p>\n        </div>\n      </Wrapper>\n      <InfoBlock>\n        <Text>Additional information</Text>\n        <BtnList>\n          <li>\n            <BtnLink to=\"cast\">Cast</BtnLink>\n          </li>\n          <li>\n            <BtnLink to=\"reviews\">Reviews</BtnLink>\n          </li>\n        </BtnList>\n      </InfoBlock>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMovieData.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieData;\n","import { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { fetchMovieData } from '../API';\nimport BackLink from '../components/BackLink';\nimport MovieData from '../components/MovieData';\nimport HandleError from '../components/HandleError';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState();\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setError(false);\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMovieData(movieId);\n        if (response.length === 0) setError(true);\n        setMovieData(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink patch={backLinkLocationRef.current} />\n      {movieData && <MovieData data={movieData} />}\n      {error && <HandleError />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","page","include_adult","query","fetchMovieData","id","fetchMovieActors","cast","fetchMovieReviews","Wrap","styled","Image","title","src","errorImage","alt","BtnLink","Link","patch","to","Wrapper","InfoBlock","Text","BtnList","NavLink","poster_path","name","vote_average","overview","genres","placeholder","Math","round","map","genre","join","getNamesFromGenres","Suspense","fallback","Loader","useState","movieData","setMovieData","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovies","length","console","message","current","HandleError"],"sourceRoot":""}