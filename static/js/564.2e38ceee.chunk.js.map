{"version":3,"file":"static/js/564.2e38ceee.chunk.js","mappings":"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","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '58645e23389326a2e8ed75695b9e1b79';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async page => {\n  const response = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async (value, page) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\nexport const fetchMovieData = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US'`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, Image } from './HandleError.styled';\n\nimport errorImage from '../../images/oops-error.jpg';\n\nconst HandleError = ({\n  title = 'Sorry, there are no results for this query.',\n}) => {\n  return (\n    <Wrap>\n      <p>{title}</p>\n      <Image src={errorImage} alt=\"Something went wrong\" />\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: block;\n  padding: 8px 16px;\n  margin: 20px auto;\n\n  color: black;\n  background-color: inherit;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n\n  border-radius: 4px;\n  border: 1px solid coral;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: coral;\n  }\n`;\n","import { Btn } from './LoadMoreBtn.styled';\nimport PropTypes from 'prop-types';\n\nconst LoadMoreBtn = ({ onClick }) => {\n  return (\n    <Btn type=\"button\" onClick={onClick} aria-label=\"Load more\">\n      Load more...\n    </Btn>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default LoadMoreBtn;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MovieLink = styled(Link)`\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n  text-decoration: none;\n  transition: color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: coral;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.07);\n  }\n`;\n\nexport const Title = styled.p`\n  padding: 5px 10px;\n  margin: 0;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item, Image, Title, MovieLink } from './MoviesListItem.styled';\nimport placeholder from '../../images/no-image.png';\n\nconst API_URL_IMG = `https://image.tmdb.org/t/p/original`;\n\nconst MoviesListItem = ({ id, title, name, image }) => {\n  const location = useLocation();\n  const currentPage = location.pathname === '/' ? 'movies' : location.pathname;\n\n  // console.log(location);\n\n  return (\n    <Item>\n      <MovieLink to={`${currentPage}/${id}`} state={{ from: location }}>\n        <Image\n          src={image ? API_URL_IMG + image : placeholder}\n          alt={title ?? name}\n          loading=\"lazy\"\n        />\n        <Title>{title ?? name}</Title>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  image: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport MoviesListItem from '../MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <MoviesListItem\n          key={nanoid(5)}\n          id={id}\n          title={title}\n          name={name}\n          image={poster_path}\n        />\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { FiSearch } from 'react-icons/fi';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 35px;\n  margin-right: 5px;\n\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  border: 1px solid coral;\n  outline: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid coral;\n  background-color: inherit;\n  font-weight: 500;\n  line-height: 1.15;\n\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  outline: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: coral;\n    color: #fff;\n  }\n`;\n\nexport const SearchIcon = styled(FiSearch)`\n  color: inherit;\n  margin-left: 5px;\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, SearchIcon } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchValue = value.trim();\n\n    if (searchValue === '') {\n      toast.error(\n        'The search field cannot be empty. Please enter a query and try again.'\n      );\n      return;\n    }\n\n    onSubmit(searchValue);\n    // setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"search\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter movie title\"\n        value={value}\n        onChange={handleChange}\n      />\n\n      <Button type=\"submit\" aria-label=\"Search\">\n        Search {<SearchIcon />}\n      </Button>\n    </Form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport Search from '../components/Search';\nimport { fetchSearchMovies } from '../API';\nimport Section from 'components/Section/Section';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport HandleError from 'components/HandleError/HandleError';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n    const searchValue = searchParams.get('query');\n\n    if (!searchValue) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchSearchMovies(searchValue, pages);\n        const { results, total_pages } = response;\n\n        if (results.length === 0) setError(true);\n\n        setMovies(prev => [...prev, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [pages, searchParams]);\n\n  const handleFormSubmit = value => {\n    setMovies([]);\n    setPages(1);\n    setTotalPages(1);\n    if (value === searchParams.get('query')) {\n      return toast.error(\n        'You have already searched for this keyword. Please try another one.'\n      );\n    }\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleFormSubmit} />\n      {movies.length > 0 && (\n        <Section title=\"List of movies by keyword:\">\n          <MoviesList movies={movies} />\n          {pages < totalPages && (\n            <LoadMoreBtn onClick={() => setPages(prev => prev + 1)} />\n          )}\n        </Section>\n      )}\n      {error && <HandleError />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","fetchTrendingMovies","page","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","id","fetchMovieActors","cast","fetchMovieReviews","Wrap","styled","Image","title","src","errorImage","alt","Btn","onClick","type","Item","MovieLink","Link","Title","name","image","location","useLocation","currentPage","pathname","to","state","from","placeholder","loading","List","movies","map","poster_path","nanoid","children","Form","Input","Button","SearchIcon","FiSearch","onSubmit","useState","setValue","e","preventDefault","searchValue","trim","toast","autoComplete","autoFocus","onChange","target","setMovies","pages","setPages","totalPages","setTotalPages","useSearchParams","setSearchParams","error","setError","useEffect","get","fetchMovies","total_pages","length","prev","console","message","Section","MoviesList","LoadMoreBtn","HandleError"],"sourceRoot":""}